/**
 * Intima.ai - API
 * Bem vindo a documentação da API do [Intima.ai](https://app.intima.ai). Está documentação cobre todas as ações disponíveis dentro do Intima.ai e as disponibilizam como `ENDPOINTS` que podem ser integrados e utilizados por outros serviços ou aplicações, bastando somente possuir o `Token de acesso da API`.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ActionsProcessProtocolResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ActionsProcessProtocolResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.IntimaaiApi) {
      root.IntimaaiApi = {};
    }
    root.IntimaaiApi.ProtocolosApi = factory(root.IntimaaiApi.ApiClient, root.IntimaaiApi.ActionsProcessProtocolResponse);
  }
}(this, function(ApiClient, ActionsProcessProtocolResponse) {
  'use strict';

  /**
   * Protocolos service.
   * @module api/ProtocolosApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ProtocolosApi. 
   * @alias module:api/ProtocolosApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createProcessProtocolo operation.
     * @callback module:api/ProtocolosApi~createProcessProtocoloCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActionsProcessProtocolResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createProcessProtocolo
     * Realiza um novo protocolo
     * @param {Number} pjeAuthId é o id referente ao tribunal cadastrado em \&quot;Tribunais ativos\&quot; no Intima.ai
     * @param {String} numeroProcesso 
     * @param {Number} tipoDocumentoMensagemGeral 
     * @param {Array.<module:model/Documento>} documentos Optional parameters
     * @param {module:api/ProtocolosApi~createProcessProtocoloCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActionsProcessProtocolResponse}
     */
    this.createProcessProtocolo = function (pjeAuthId, numeroProcesso, tipoDocumentoMensagemGeral, documentos, mensagem_geral, descricao, callback) {
      documentos = documentos || [];
      var postBody = null;

      // verify the required parameter 'pjeAuthId' is set
      if (pjeAuthId === undefined || pjeAuthId === null) {
        throw new Error("O parametro 'pjeAuthId' é obrigatório!");
      }

      // verify the required parameter 'numeroProcesso' is set
      if (numeroProcesso === undefined || numeroProcesso === null) {
        throw new Error("O parametro 'numeroProcesso' é obrigatório!");
      }

      // verify the required parameter 'tipoDocumentoMensagemGeral' is set
      if (tipoDocumentoMensagemGeral === undefined || tipoDocumentoMensagemGeral === null) {
        throw new Error("O parametro 'tipoDocumentoMensagemGeral' é obrigatório!");
      }

      // verify the required parameter 'documentos' is set
      if (documentos === undefined || documentos === null) {
        throw new Error("O parametro 'documentos' é obrigatório!");
      } else {
        documentos.map((doc, index) => {
          if (doc === '' || doc === null || doc == undefined) {
            throw new Error(`O parametro 'documentos' é obrigatório!`);
          }
          if (doc['arquivo'] === '' || doc['arquivo'] === null) {
            throw new Error(`O parametro 'documentos[${index}].arquivo' é obrigatório!`);
          }
          if (doc['tipo_documento'] === '' || doc['tipo_documento'] === null) {
            throw new Error(`O parametro 'documentos[${index}].tipo_documento' é obrigatório!`);
          }
          if (doc['descricao_documento'] === '' || doc['descricao_documento'] === null) {
            throw new Error(`O parametro 'documentos[${index}].descricao_documento' é obrigatório!`);
          }
          if (doc['order'] === '' || doc['order'] === null) {
            throw new Error(`O parametro 'documentos[${index}].order' é obrigatório!`);
          }
        });
      }

      var pathParams = {
        'pje_auth_id': pjeAuthId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'numero_processo': numeroProcesso,
        'tipo_documento_mensagem_geral': tipoDocumentoMensagemGeral,
        'mensagem_geral': mensagem_geral,
        'descricao': descricao,
        'documentos': documentos
      };

      // 'documentos': this.apiClient.buildCollectionParam(documentos, 'multi')

      // console.log(formParams, JSON.stringify(formParams));

      var authNames = ['api_token'];
      var contentTypes = ['multipart/form-data'];//multipart/form-data
      var accepts = ['application/json'];
      var returnType = ActionsProcessProtocolResponse;

      return this.apiClient.callApi(
        '/actions/process-protocol/{pje_auth_id}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
